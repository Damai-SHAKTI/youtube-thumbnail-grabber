{"version":3,"sources":["components/Header.js","components/DownloadAlert.js","components/ThumbnailView.js","components/MainCardView.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","flexGrow","DenseAppBar","classes","className","AppBar","color","position","Toolbar","variant","Typography","AlertDialog","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","naria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","autoFocus","thumbnailContainer","margin","downloadBtn","marginLeft","textDecoration","InfoText","fontSize","skeleton","width","height","window","innerWidth","skeletonHeight","ThumbnailView","Width","videoId","infoText","isImageLoading","setIsImageLoading","useState","alertOpen","setAlertOpen","useEffect","setTimeout","ImageSource","style","Card","CardActionArea","CardContent","Skeleton","src","alt","title","CardActions","fetch","method","headers","then","response","blob","url","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","handleDownload","mainContainer","description","textField","marginTop","actionBtn","MainCardView","setVideoId","setInfoText","ValidateLink","getElementById","value","split","join","includes","RemoveSpacesandTime","length","index","indexOf","substring","substr","TextField","InputLabelProps","shrink","label","navigator","clipboard","readText","text","focus","catch","err","console","log","App","screensize","setScreensize","onresize","DeviceVersion","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b956589a.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function DenseAppBar() {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <AppBar color=\"primary\" position=\"static\">\r\n            <Toolbar variant=\"dense\">\r\n                <Typography variant=\"h6\" color=\"inherit\">\r\n                  YouTube Thumbnail Grabber\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog({ open, setOpen}) {\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <Dialog open={open} onClose={() => handleClose()} aria-labelledby=\"alert-dialog-title\" naria-describedby=\"alert-dialog-description\">\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Message\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Your download will start soon...\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => handleClose()} color=\"primary\" autoFocus>\r\n                    Ok\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </div>\r\n  );\r\n}","import { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AlertDialog from './DownloadAlert';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nconst skeletonHeight = () => {\r\n    let height = ''\r\n    if (window.innerWidth <= 480) {\r\n        height = \"25vh\"\r\n    }\r\n    else if (window.innerWidth <= 640) {\r\n        height = \"35vh\"\r\n    }\r\n    else if (window.innerWidth <= 780) {\r\n        height = \"45vh\"\r\n    }\r\n    else if (window.innerWidth <= 1000) {\r\n        height = \"60vh\"\r\n    }\r\n    else if (window.innerWidth <= 1336) {\r\n        height = \"78vh\"\r\n    }\r\n    else if (window.innerWidth >= 1336) {\r\n        height = \"55vh\"\r\n    }\r\n    return height\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    thumbnailContainer: {\r\n      margin: '10px auto',\r\n    },\r\n    downloadBtn: {\r\n        marginLeft: 'auto',\r\n        textDecoration: 'none',\r\n    },\r\n    InfoText: {\r\n        fontSize: '20px',\r\n    },\r\n    skeleton: {\r\n        width: '100%',\r\n        height: skeletonHeight(),\r\n    }\r\n});\r\n\r\nexport default function ThumbnailView({ Width, videoId, infoText, isImageLoading, setIsImageLoading }) {\r\n\r\n    const classes = useStyles();\r\n    const [alertOpen, setAlertOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (isImageLoading){\r\n            setTimeout(() => {\r\n                setIsImageLoading(false)\r\n            }, 1000)\r\n        }\r\n    }, [isImageLoading])\r\n\r\n    const ImageSource = (videoId) => {\r\n        return \"https://img.youtube.com/vi/\" + videoId +\"/maxresdefault.jpg\"\r\n    }\r\n\r\n    const handleDownload = (videoId) => {\r\n        fetch('https://cors-anywhere.herokuapp.com/' + videoId, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'image',\r\n        },\r\n        })\r\n        .then((response) => response.blob())\r\n        .then((blob) => {\r\n        // Create blob link to download\r\n        const url = window.URL.createObjectURL(\r\n            new Blob([blob]),\r\n        );\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', 'Thumbnail.jpg');\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        });\r\n        setAlertOpen(true)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.thumbnailContainer} style={{width:Width}}> \r\n            <Card variant=\"outlined\">\r\n            {videoId === \"\" ? <center className={classes.InfoText}>{infoText}</center> :\r\n                <>\r\n                <CardActionArea>\r\n                    <CardContent>\r\n                        {isImageLoading ? <Skeleton variant=\"rect\" className={classes.skeleton}/> : <img src={ImageSource(videoId)} alt=\"Thumbnail\" title=\"Thumbnail\" width=\"100%\"/>}           \r\n                    </CardContent> \r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button className={classes.downloadBtn} onClick={() => handleDownload(ImageSource(videoId))} variant=\"contained\" color=\"primary\">\r\n                        <GetAppIcon/> Download\r\n                    </Button>\r\n                </CardActions>\r\n                </>\r\n            }\r\n            </Card>\r\n            <AlertDialog open={alertOpen} setOpen={setAlertOpen} />\r\n        </div>    \r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ThumbnailView from './ThumbnailView';\r\n\r\nconst useStyles = makeStyles({\r\n  mainContainer: {\r\n    margin: '10px auto',\r\n  },\r\n  description: {\r\n    fontSize: 22,\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n    marginTop: '10px',\r\n  },\r\n  actionBtn: {\r\n    marginLeft: 'auto',\r\n  }\r\n});\r\n\r\nexport default function MainCardView({ Width }) {\r\n\r\n  const classes = useStyles();\r\n  const [videoId, setVideoId] = useState(\"\")\r\n  const [infoText, setInfoText] = useState(\"Thumbnail will be display here\")\r\n  const [isImageLoading, setIsImageLoading] = useState(true)\r\n\r\n  const PasteFromClipboard = () => {\r\n    navigator.clipboard.readText().then(text => {\r\n      document.getElementById(\"filled-basic\").focus();\r\n      document.getElementById(\"filled-basic\").value = text;\r\n    })\r\n    .catch(err => {\r\n      console.log('Something went wrong', err);\r\n    });\r\n  }\r\n\r\n  const ClearTextField = () => {\r\n    document.getElementById(\"filled-basic\").value = \"\";\r\n  }\r\n\r\n  const RemoveSpacesandTime = () => {\r\n    let link = (document.getElementById(\"filled-basic\").value).split(\" \").join(\"\");\r\n    if (link.includes(\"&\")) {\r\n      link = link.split(\"&\")[0];\r\n    }\r\n    else if (link.includes(\"#\")) {\r\n      link = link.split(\"#\")[0];\r\n    }\r\n    return link\r\n  }\r\n\r\n  const ValidateLink = () => {\r\n    if (document.getElementById(\"filled-basic\") != null){\r\n      let link = RemoveSpacesandTime()\r\n      if (link.includes('youtube.com') && link.length === 43){\r\n        setIsImageLoading(true);\r\n        let index = link.indexOf(\"=\");\r\n        setVideoId(link.substring(index + 1, index + 12));\r\n        setInfoText(\"\")\r\n      }\r\n      else if (link.includes('youtu.be') && link.length === 28){\r\n        setIsImageLoading(true);\r\n        setVideoId(link.substr(link.length - 11))\r\n        setInfoText(\"\")\r\n      }\r\n      else if (document.getElementById(\"filled-basic\").value === \"\"){\r\n        setInfoText(\"TextField Cannot Be Empty!\")\r\n        setVideoId(\"\")\r\n      }\r\n      else {\r\n        setInfoText(\"Invalid Link [remember to include https://]\")\r\n        setVideoId(\"\")\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className={classes.mainContainer} style={{width: Width}}>\r\n        <Card variant=\"outlined\">\r\n            <CardContent>\r\n                <div className={classes.description} color=\"textSecondary\">\r\n                    <center>Paste the link of a youtube video below to get the thumbnail</center>\r\n                </div>\r\n                <TextField className={classes.textField} id=\"filled-basic\" InputLabelProps={{shrink: true}} label=\"Paste YouTube Video Link Here\" variant=\"filled\" autoFocus />\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button onClick={() => PasteFromClipboard()} className={classes.actionBtn} variant=\"contained\" color=\"primary\">\r\n                  Paste\r\n                </Button>\r\n                <Button onClick={() => ClearTextField()} className={classes.actionBtn} variant=\"contained\" color=\"primary\">\r\n                  Clear\r\n                </Button>\r\n                <Button onClick={() => ValidateLink()} className={classes.actionBtn} variant=\"contained\" color=\"primary\">\r\n                  Grab Thumbnail\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    </div>\r\n    <ThumbnailView Width={Width} videoId={videoId} infoText={infoText} isImageLoading={isImageLoading} setIsImageLoading={setIsImageLoading} />\r\n    </>\r\n  );\r\n}","import './App.css';\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport MainCardView from './components/MainCardView';\n\nfunction App() {\n\n  const [screensize, setScreensize] = useState(window.innerWidth);\n  window.onresize = () => setScreensize(window.innerWidth);\n\n  const DeviceVersion = () => {\n    if (screensize <= 1336) {\n        return \"98%\"; // For Mobile\n    }\n    else {\n        return \"50%\"; // For Desktop/Bigger Screen\n    }\n  }\n  \n  return (\n    <>\n    <Header Width={DeviceVersion()} />\n    <MainCardView Width={DeviceVersion()} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}